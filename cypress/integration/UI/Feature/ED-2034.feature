Feature: Gerenciar e Registrar ConferÃªncias e EquÃ­vocos
    Scenario Outline: Registrar conferÃªncia por setor
        @registerConference
        Given o usuÃ¡rio estÃ¡ na tela de "<setor>"
        When o usuÃ¡rio registra uma conferÃªncia de "<tipoConferencia>"
        Then o sistema deve salvar a "<tipoConferencia>" com sucesso

        Examples:
            | setor       | tipoConferencia            |
            | atendimento | conferÃªncia do backoffice  |
            | atendimento | conferÃªncia do atendimento |
            | inclusÃ£o    | conferÃªncia da inclusÃ£o    |
            | entrada     | conferÃªncia de entrada     |
            | saÃ­da       | conferÃªncia de saÃ­da       |

    Scenario Outline: Desfazer conferÃªncia por setor
        @undoConference
        Given o usuÃ¡rio estÃ¡ na tela de "<telaDesfazer>"
        And hÃ¡ uma "<tipoConferencia>" jÃ¡ registrada
        When o usuÃ¡rio desfaz a "<tipoConferencia>"
        Then a "<tipoConferencia>" deve ser desfeita com sucesso
        And no banco de dados os registros de conferencia devem receber data e hora da exclusÃ£o softdelete

        Examples:
            | telaDesfazer           | tipoConferencia                  |
            | conferÃªncia da entrada | conferÃªncia da inclusÃ£o          |
            | conferÃªncia da saÃ­da   | conferÃªncia da entrada           |
            | conferÃªncia da saÃ­da   | conferÃªncia da saÃ­da finalizados |


    Scenario: Registrar equÃ­voco com observaÃ§Ãµes e imagens
        @recordError
        Given o usuÃ¡rio comeÃ§a a registrar um equÃ­voco durante uma conferÃªncia
        And seleciona o equÃ­voco "Ativo selecionado equivocadamente no orÃ§amento"
        When o usuÃ¡rio adiciona a observaÃ§Ã£o "OrÃ§amento selecionou ativo equivocadamente"
        And anexa o arquivo "ativoIncorreto.png"
        Then o sistema deve salvar o equÃ­voco junto com a observaÃ§Ã£o e a imagem
        And no banco de dados deve ser armazenado observacao e imagem inseridos


    Scenario: Validar caracteres especiais em observaÃ§Ãµes
        @validateSpecialCharacters
        Given o usuÃ¡rio estÃ¡ editando uma observaÃ§Ã£o para um equÃ­voco
        When o usuÃ¡rio insere "Erro nos dados ğŸ’¾ com @tags!"
        Then o sistema nÃ£o deve aceitar os caracteres especiais e emojis
        And deve apresentar somente letras ao exibir a observaÃ§Ã£o inserida


    Scenario: Limitar caracteres em observaÃ§Ãµes
        @validateCharacterLimit
        Given o usuÃ¡rio estÃ¡ editando uma observaÃ§Ã£o para um equÃ­voco
        When o usuÃ¡rio insere 260 caracteres no campo de observaÃ§Ã£o
        Then o sistema deve aceitar no mÃ­nimo 255 caracteres no campo de observaÃ§Ã£o

    Scenario Outline: Registrar mÃºltiplos equÃ­vocos
        @recordMultipleErrors
        Given o usuÃ¡rio estÃ¡ registrando equÃ­vocos durante "<etapaConferencia>"
        And seleciona mÃºltiplos equÃ­vocos: "<equivocos>"
        When o usuÃ¡rio adiciona uma observaÃ§Ã£o e uma imagem para cada equÃ­voco
        Then o sistema deve exibir o total de "<quantidadeEquivocos>" equÃ­vocos registrados

        Examples:
            | etapaConferencia | equivocos                              | quantidadeEquivocos |
            | backoffice       | "Quantidade InvÃ¡lida, Dados Faltantes" | 2                   |
            | inclusÃ£o         | "Etiqueta Errada"                      | 1                   |

    Scenario: Limitar registro de equÃ­vocos por setor
        @sectorLimit
        Given o usuÃ¡rio jÃ¡ registrou equÃ­vocos no setor "<setor>"
        When o usuÃ¡rio tenta registrar novos equÃ­vocos
        Then o sistema deve exibir o botÃ£o de registro de equÃ­vocos desabilitado

        Examples:
            | setor                  |
            | backoffice             |
            | inclusÃ£o               |
            | conferÃªncia de entrada |
            | conferÃªncia de saÃ­da   |

    Scenario: Marcar pendÃªncias
        @markPending
        Given o usuÃ¡rio estÃ¡ na tela de <setor>
        When o usuÃ¡rio clica no botÃ£o "Marcar PendÃªncias"
        Then um modal deve ser aberto com as pendÃªncias possÃ­veis de serem registradas
        And ao selecionar pendÃªncias e fechar, o sistema deve registrar as pendÃªncias selecionadas
        And no banco de dados deve ser armazenado as pendencias apontadas inseridos
        And ao remover as pendÃªncias o orÃ§amento deve seguir para o prÃ³ximo passo do processo
        And no banco de dados as pendencias criadas devem receber valor em pendencia_resolvida

        Examples:
            | setor                  |
            | conferÃªncia de entrada |
            | conferÃªncia de saÃ­da   |


    Scenario: Persistir equÃ­vocos entre etapas de conferÃªncia
        @persistErrors
        Given o usuÃ¡rio registrou equÃ­vocos na inclusÃ£o
        And esses equÃ­vocos estÃ£o visÃ­veis na etapa de conferÃªncia de entrada
        When o usuÃ¡rio registra novos equÃ­vocos na conferÃªncia de entrada
        Then o sistema deve manter os equÃ­vocos antigos
        And salvar apenas os novos equÃ­vocos adicionados na conferÃªncia de entrada

    Scenario: Desfazer conferÃªncia exclui equÃ­vocos da etapa atual
        @undoConferenceErrors
        Given hÃ¡ equÃ­vocos registrados na inclusÃ£o
        When o usuÃ¡rio desfaz a conferÃªncia da inclusÃ£o
        Then o sistema deve excluir os equÃ­vocos da conferÃªncia atual
        And manter os equÃ­vocos registrados nas etapas anteriores

    @recordObservation @validationFieldText
    Scenario: Tentativa de inserir observaÃ§Ã£o sem texto
        Given o usuÃ¡rio estÃ¡ no modal de registro de equÃ­vocos
        And o campo "Adicionar observaÃ§Ã£o sobre o equÃ­voco" estÃ¡ vazio
        When o usuÃ¡rio clica no botÃ£o "Adicionar"
        Then o sistema deve exibir o botÃ£o adicionar desabilitado
        And nÃ£o Ã© possÃ­vel realizar o click

    @multiUserValidation
    Scenario: Registro de conferÃªncia por um usuÃ¡rio e tentativa de registro por outro
        Given o usuÃ¡rio "UsuÃ¡rio A" registrou uma conferÃªncia no setor "<setor>"
        When o "UsuÃ¡rio B" tenta registrar outra conferÃªncia no mesmo setor sem recarregar a pÃ¡gina
        Then o sistema deve impedir o registro pelo "UsuÃ¡rio B"
        And exibir uma mensagem informando que a conferÃªncia jÃ¡ foi registrada

        Examples:
            | setor                  |
            | backoffice             |
            | atendimento            |
            | conferÃªncia de entrada |
            | conferÃªncia de saÃ­da   |

    @recordObservation @removeAndReinsert
    Scenario Outline: Inserir, remover e reinserir observaÃ§Ã£o e imagem
        Given o usuÃ¡rio estÃ¡ no modal de registro de equÃ­vocos
        When o usuÃ¡rio adiciona a observaÃ§Ã£o "<observacao>"
        And o usuÃ¡rio anexa a imagem "<imagem>"
        Then o sistema deve salvar a observaÃ§Ã£o "<observacao>" e a imagem "<imagem>"

        When o usuÃ¡rio remove a observaÃ§Ã£o e a imagem adicionadas
        Then o sistema nÃ£o deve exibir observaÃ§Ã£o ou imagem anexada

        Examples:
            | observacao                           | imagem             |
            | Primeira observaÃ§Ã£o sobre o equÃ­voco | primeiraImagem.png |
            | Segunda observaÃ§Ã£o sobre o equÃ­voco  | segundaImagem.png  |
            | Terceira observaÃ§Ã£o sobre o equÃ­voco | terceiraImagem.png |

    @logGeneration @registerConference
    Scenario Outline: Registrar log detalhado para aÃ§Ãµes de conferÃªncia
        Given o usuÃ¡rio estÃ¡ na tela de "<setor>"
        When o usuÃ¡rio registra uma conferÃªncia de "<tipoConferencia>"
        Then o sistema deve salvar a "<tipoConferencia>" com sucesso
        And o log do pedido deve exibir:
            | ObservaÃ§Ã£o   | Quem Inseriu         | Data   | HorÃ¡rio |
            | <observacao> | <usuarioResponsavel> | <data> | <hora>  |

        Examples:
            | setor       | tipoConferencia            | observacao                                     | usuarioResponsavel | data       | hora  |
            | backoffice  | conferÃªncia do backoffice  | ConferÃªncia Realizada (Backoffice)             | JoÃ£o Silva         | 05/12/2024 | 15:30 |
            | atendimento | conferÃªncia do atendimento | ConferÃªncia Realizada (Atendimento)            | Maria Oliveira     | 05/12/2024 | 15:45 |
            | inclusÃ£o    | conferÃªncia da inclusÃ£o    | InclusÃ£o Realizada (Inclusao)                  | Pedro Lima         | 05/12/2024 | 16:00 |
            | entrada     | conferÃªncia de entrada     | ConferÃªncia Realizada (Conferencia de Entrada) | Ana Santos         | 05/12/2024 | 16:15 |
            | saÃ­da       | conferÃªncia de saÃ­da       | ConferÃªncia Realizada (Conferencia de Saida)   | Lucas Costa        | 05/12/2024 | 16:30 |

    @logValidation @markPending
    Scenario Outline: Registrar log detalhado ao marcar pendÃªncias
        Given o usuÃ¡rio estÃ¡ na tela de "<setor>"
        When o usuÃ¡rio clica no botÃ£o "Marcar PendÃªncias"
        Then o log do pedido deve exibir:
            | ObservaÃ§Ã£o   | Quem Inseriu         | Data   | HorÃ¡rio |
            | <observacao> | <usuarioResponsavel> | <data> | <hora>  |

        Examples:
            | setor                  | observacao                       | usuarioResponsavel | data       | hora  |
            | conferÃªncia de entrada | PendÃªncias registradas (Entrada) | Ana Santos         | 05/12/2024 | 18:00 |
            | conferÃªncia de saÃ­da   | PendÃªncias registradas (Saida)   | Lucas Costa        | 05/12/2024 | 18:15 |